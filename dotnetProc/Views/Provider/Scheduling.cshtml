


@model HalloDoc_DAL.ProviderViewModels.ShiftModel;
@using HalloDoc_DAL.ProviderViewModels;

@{
    Layout = "_Layout";
}

<partial name="_DashNavbar" />


<partial name="_Dashtabs" />

<div id="ShiftModalContainer">

</div>


<div class="container-fluid mt-3">
    <div class="row justify-content-center">


        <div class="d-flex col-xl-8 col-lg-9 col-md-10 col-sm-11 col-12 justify-content-between">
            <h3>Scheduling</h3>
            <button class="btn btn-outline-info text-info lightInfo-btn" onclick="changeTab()">
                <i class="bi bi-chevron-left text-info lightInfo-btn "></i>Back
            </button>
        </div>


        <div class="col-xl-8 col-lg-9 col-md-10 col-sm-11 col-11 mt-3 ProviderMenuHeader">


            <div class="row  justify-content-lg-between justify-content-sm-center  justify-content-center p-sm-3 p-3" style="row-gap:1rem;align-items: center;background:var(--pi-form-back-color);border-radius:10px 10px 0px 0px;">

                <div class="form-floating col-lg-4 col-sm-10">

                    <div class="form-floating">

                        <select class="form-select form-control" id="shiftRegionSelector" aria-label="Floating label select example" style="background-color:var(--pi-back-color);" onchange="GetRegionsWiseShiftTable()">
                            <option value="0">All Region</option>

                            @foreach (Region region in Model.regions)
                            {
                                <option value="@region.Regionid">@region.Name</option>
                            }
                        </select>
                        <label for="ProviderRegionSelector">Regions</label>
                    </div>




                </div>

                <div class="col-xl-6  col-sm-12   d-flex justify-content-end" style="column-gap:1rem;">
                    <a asp-action="CreateProviderAccountView" asp-controller="Provider" class="btn btn-info  text-white darkInfo-btn ">Providers On Call</a>
                    <a asp-action="RequestedShiftView" asp-controller="Provider" class="btn btn-info  text-white darkInfo-btn ">Shift For Review</a>
                    <button  class="btn btn-info  text-white darkInfo-btn " onclick="GetShiftModalView()">Add New Shift</button>
                </div>

            </div>

            <div class="row mt-3 p-3">

                <div class="col-12">
                     <h4 id="DateHeader">@Model.Today.ToString("dddd,MMM d,yyyy")</h4>
                </div>

            </div>

            <div class="row mt-3 p-3">

                <div class="col-12 d-flex justify-content-end" >
                    

                    <div class="btn d-flex " style="align-items:center;column-gap:5px;">
                        <div class="shiftBoxes" style="border-color:#edb2cf;background-color:#ffd9fd"></div><div style="color:var(--pi-label-color);">Pending Shift</div>
                    </div>
                    <div class="btn d-flex " style="align-items:center;column-gap:5px;">
                        <div class="shiftBoxes" style="border-color:#82cf97;background-color:#cffbd4"></div><div style="color:var(--pi-label-color);">Approved Shift</div>
                    </div>
                    


                </div>

            </div>

            <div id="ShiftTableContainer" class="container-fluid">

           
           </div>

        </div>

    </div>


    <div class="row" style="justify-content:center">
        <div class="col-xl-8 col-lg-9 col-md-10 col-sm-11 col-11 ">

           


        </div>

       

    </div>

</div>



<script>

    $(document).ready(function () {

        handleNavChange('provider-menu-tab')
    
        //GetDayWiseShiftTableView('DayBtn')

        GetMonthWiseShiftTableView('MonthBtn')

        localStorage.setItem("ActiveTableMode","DayBtn");
        


        toastr.remove();
        if ('@TempData["ShowPositiveNotification"]' != '') {

            toastr.success('@TempData["ShowPositiveNotification"]');
        }
        else if ('@TempData["ShowNegativeNotification"]' != '') {
            toastr.error('@TempData["ShowNegativeNotification"]')
        }
    })

    const GetWeekWiseShiftTableView = (id) => {


    



        var regionId = $("#shiftRegionSelector").val();

    @{

        DateTime today = DateTime.Today;
        DayOfWeek startOfWeek = DayOfWeek.Sunday;

        int diff = (7 + (today.DayOfWeek - startOfWeek)) % 7;

        DateTime startOfWeekDate = today.AddDays(-1 * diff);


    }

            $("#DateHeader").text('@startOfWeekDate.ToString("MMM d") - @startOfWeekDate.AddDays(6).ToString("MMM d"), @(DateTime.Today.Year)')


        $.ajax({

            url: "/Provider/GetWeekWiseShiftTableView",
            method: "post",
            data: {
                date: @startOfWeekDate.Day, month: @startOfWeekDate.Month, year: @startOfWeekDate.Year, regionId: regionId
            },
            success: function (response) {

                $("#ShiftTableContainer").html(response);

                var activeModeBtn = localStorage.getItem("ActiveTableMode");
                var activeBtn = document.getElementById(`${activeModeBtn}`);
                activeBtn.classList.remove("btn-info", "text-white", "darkInfo-btn");
                activeBtn.classList.add("btn-outline-info", "text-info", "lightInfo-btn");
                var currentBtn = document.getElementById(id);
                currentBtn.classList.add("btn-info", "text-white", "darkInfo-btn")
                currentBtn.classList.remove("btn-outline-info", "text-info", "lightInfo-btn")
                localStorage.setItem("ActiveTableMode", id)


                localStorage.setItem("TableMode", "Week");

                localStorage.setItem("currentDate", @startOfWeekDate.Day);
                localStorage.setItem("currentMonth", @startOfWeekDate.Month);
                localStorage.setItem("currentYear", @startOfWeekDate.Year);
            },
            error: function (err) {
                console.log(err);
            }

        })

    }



    const GetDayWiseShiftTableView = (id) => {

    


        var date = @Html.Raw(Json.Serialize(Model.Today.Day));
        var month = @Html.Raw(Json.Serialize(Model.Today.Month));
        var year = @Html.Raw(Json.Serialize(Model.Today.Year));
        var regionId = $("#shiftRegionSelector").val();
        $("#DateHeader").text("@Model.Today.ToString("dddd,MMM d,yyyy")")

    


        $.ajax({

            url: "/Provider/GetDayWiseShiftTable",
            method: "post",
            data: { date: date, month: month, year: year, regionId: regionId },
            success: function (response) {

                $("#ShiftTableContainer").html(response);



                var activeModeBtn = localStorage.getItem("ActiveTableMode");
                var activeBtn = document.getElementById(`${activeModeBtn}`);
                activeBtn.classList.remove("btn-info", "text-white", "darkInfo-btn");
                activeBtn.classList.add("btn-outline-info","text-info","lightInfo-btn");
                var currentBtn = document.getElementById(id);
                currentBtn.classList.add("btn-info","text-white","darkInfo-btn")
                currentBtn.classList.remove("btn-outline-info","text-info","lightInfo-btn")
                localStorage.setItem("ActiveTableMode", id)


                localStorage.setItem("TableMode", "Day");

                localStorage.setItem("currentDate", date);
                localStorage.setItem("currentMonth", month);
                localStorage.setItem("currentYear", year);
            },
            error: function (err) {
                console.log(err);
            }

        })
    }

 const GetMonthWiseShiftTableView = (id) =>{
        


    
        var regionId = $("#shiftRegionSelector").val();


        $("#DateHeader").text("@DateTime.Now.ToString("MMM yyyy")")

        $.ajax({

            url: "/Provider/GetMonthWiseShiftTableView",
            method: "post",
            data: { date: 1, month: @DateTime.Now.Month, year: @DateTime.Now.Year, regionId: regionId },
            success: function (response) {

                $("#ShiftTableContainer").html(response);



                var activeModeBtn = localStorage.getItem("ActiveTableMode");
                var activeBtn = document.getElementById(`${activeModeBtn}`);
                activeBtn.classList.remove("btn-info", "text-white", "darkInfo-btn");
                activeBtn.classList.add("btn-outline-info", "text-info", "lightInfo-btn");
                var currentBtn = document.getElementById(id);
                currentBtn.classList.add("btn-info", "text-white", "darkInfo-btn")
                currentBtn.classList.remove("btn-outline-info", "text-info", "lightInfo-btn")
                localStorage.setItem("ActiveTableMode", id)


                localStorage.setItem("TableMode", "Month");

                localStorage.setItem("currentDate", 1);
                localStorage.setItem("currentMonth", @DateTime.Now.Month);
                localStorage.setItem("currentYear", @DateTime.Now.Year);
            },
            error: function (err) {
                console.log(err);
            }

        })

 }


</script>